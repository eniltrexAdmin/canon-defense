name: Deploy PRODUCTION
on:
  push:
    branches:
      - main

jobs:
  build-go-project:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: canon-defense.wasm
      wasm-exec-name: wasm_exec.js
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc \
            libc6-dev \
            libgl1-mesa-dev \
            libxcursor-dev \
            libxi-dev \
            libxinerama-dev \
            libxrandr-dev \
            libxxf86vm-dev \
            libasound2-dev \
            pkg-config        

      - name: Install go language
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
      - name: Install dependencies
        run: go mod download

      - name: Build Go WASM executable
        run: env GOOS=js GOARCH=wasm go build -o canon-defense.wasm ./ebiten

      - name: Fetch wasm_exec.js
        run: cp $(go env GOROOT)/misc/wasm/wasm_exec.js ./wasm_exec.js

      - name: upload-wasm-executable
        uses: actions/upload-artifact@v4
        with:
          name: wasm_exec.js
          path: wasm_exec.js

      - id: upload-artifact
        name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: canon-defense.wasm
          path: canon-defense.wasm


  deploy-webpage:
    runs-on: ubuntu-latest
    needs: build-go-project
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_DEPLOYER_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_DEPLOYER_KEY_SECRET }}
        aws-region:  eu-west-3

    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Download compiled game artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{needs.build-go-project.outputs.artifact-name}}

    - name: Download Wasm executable
      uses: actions/download-artifact@v4
      with:
        name: ${{needs.build-go-project.outputs.wasm-exec-name}}
    - name: Copy files to s3 bucket
      shell: bash
      run: |
        ls -lah
        pwd
        ls -lah ui
        aws s3 cp html/index.html s3://${{ secrets.AWS_S3_BUCKET_NAME }}/
        aws s3 cp html/main.html s3://${{ secrets.AWS_S3_BUCKET_NAME }}/
        aws s3 cp ${{needs.build-go-project.outputs.artifact-name}} s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ --content-type application/wasm
        aws s3 cp ${{needs.build-go-project.outputs.wasm-exec-name}} s3://${{ secrets.AWS_S3_BUCKET_NAME }}/ --content-type application/javascript
    - name: Invalidate cache so CF stops serving old non existent versions
      shell: bash
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CF_ID }} --paths '/*'
